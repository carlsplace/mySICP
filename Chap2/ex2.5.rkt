(define (n-th-power x n)
  (define (iter i result)
    (if (> i n)
        result
        (iter (+ i 1) (* x result))))
  (iter 1 1))

(define (cons a b)
  (* (n-th-power 2 a) (n-th-power 3 b)))
(define (car z)
  (define (iter a z)
    (if (= (remainder z 2) 0)
        (iter (+ a 1) (/ z 2))
        a))
  (iter 0 z))
(define (cdr z)
  (define (iter b z)
    (if (= (remainder z 3) 0)
        (iter (+ b 1) (/ z 3))
        b))
  (iter 0 z))

(car (cons 3 4))
(cdr (cons 3 4))