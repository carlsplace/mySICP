(define (sum term a next b)
  (define (iter a result)
    (if (> a b)
        result
        (iter (next a) (+ (term a) result)))) ;(term a) 注意term的作用！
  (iter a 0))
(define (cube x) (* x x x))
(define (inc n) (+ n 1))
(define (simpson f a b n)
  (define h (/ (- b a) n))
  (define (yk k) (f (+ a (* k h))))
  (define (simpson-term k)
    (* (cond ((or (= k 0) (= k n)) 1)
             ((even? k) 2)
             (else 4))
       (yk k)))
  (* (/ h 3) (sum simpson-term 0 inc n)))
(simpson cube 0 1.0 100)
(simpson cube 0 1.0 1000)