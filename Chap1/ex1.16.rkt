(define (fast-expt b n)
  (define (square x) (* x x))
  (define (iter a b n)
    (cond ((= n 0) a) ;not ((= n 0) 1)
          ((even? n) (iter a (square b) (/ n 2)))
          (else (iter (* a b) b (- n 1)))))
  (iter 1 b n))

(fast-expt 2 0)
(fast-expt 2 10)
