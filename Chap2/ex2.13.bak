(define (make-interval a b) (cons a b))
(define (lower-bound x) (min (car x) (cdr x)))
(define (upper-bound x) (max (car x) (cdr x)))
(define (mul-interval x y)
  (let ((p1 (* (lower-bound x)
               (lower-bound y)))
        (p2 (* (lower-bound x)
               (upper-bound y)))
        (p3 (* (upper-bound x)
               (lower-bound y)))
        (p4 (* (upper-bound x)
               (upper-bound y))))
    (make-interval (min p1 p2 p3 p4)
                   (max p1 p2 p3 p4))))
(define (center i)
  (/ (+ (lower-bound i)
        (upper-bound i))
     2))
(define (make-center-percent center percentage)
  (make-interval (* center (+ 100 percentage) 0.01)
                 (* center (- 100 percentage) 0.01)))
(define (percent i)
  (* (/ (- (upper-bound i)
           (lower-bound i))
        2.0
        (center i))
     100))
(define (show-percent i)
  (display (percent i)))

(define test1 (make-center-percent 100 0.3))
(define test2 (make-center-percent 1000 0.7))
(show-percent (mul-interval test1 test2))