(define (square x) (* x x))
(define (cube x) (* x x x))
(define (cubic a b c)
  (lambda (x)
    (+ (cube x)
       (* a (square x))
       (* b x)
       c)))
(define (fixed-point f guess)
  (define tolerance 0.00001)
  (define (close-enough? a b)
    (< (abs (- a b)) tolerance))
  (if (close-enough? (f guess) guess)
      (f guess)
      (fixed-point f (f guess))))
(define (newton-transform g)
  (define dx 0.00001)
  (define (deriv g)
    (lambda (x)
      (/ (- (g (+ x dx)) (g x))
         dx)))
  (lambda (x)
    ( - x (/ (g x)
             ((deriv g) x)))))
(define (newtons-method g guess)
  (fixed-point (newton-transform g) guess))
(newtons-method (cubic 1 2 1) 1)
((cubic 1 2 1) -0.56984)